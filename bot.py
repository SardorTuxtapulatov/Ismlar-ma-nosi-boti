from aiogram import Bot, Dispatcher, types
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart,Command
from aiogram import F
from aiogram.types import Message,CallbackQuery
from data import config
import asyncio
import logging
import sys
from menucommands.set_bot_commands  import set_default_commands
from baza.sqlite import Database
from filters.admin import IsBotAdminFilter
from filters.check_sub_channel import IsCheckSubChannels
from keyboard_buttons import admin_keyboard
from aiogram.fsm.context import FSMContext
from middlewares.throttling import ThrottlingMiddleware #new
from states.reklama import Adverts
from aiogram.types import InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
import time 
from ism_manosi import ismlar_manosi
from inlinebutton import inline_menu,course_button
ADMINS = config.ADMINS
TOKEN = config.BOT_TOKEN
CHANNELS = config.CHANNELS

dp = Dispatcher()


@dp.message(CommandStart())
async def start_command(message:Message):
    full_name = message.from_user.full_name
    telegram_id = message.from_user.id
    try:
        db.add_user(full_name=full_name,telegram_id=telegram_id)
        await message.answer(text="Assalomu alaykum, botimizga hush kelibsiz")
    except:
        await message.answer(text="Assalomu alaykum bu bot sizga Ham Ismlar ma'nosini topishda yordam beradi ham Sifat o'quv markazi haqida ma'lumot beradi!\nMenu:/menu")


@dp.message(Command("/count"))
async def start_command(message:Message):
    full_name = message.from_user.full_name
    telegram_id = message.from_user.id
    try:
        db.add_user(full_name=full_name,telegram_id=telegram_id)
        await message.answer(text="")
    except:
        await message.answer(text="Assalomu alaykum bu SIFAT o'quv markazi o'quvchisi To'xtapulatov Sardor yaratgan \nAdmin:@Sardor_Tuxtapulatov \nYosh:15yosh\nO'quv Markaz:SIFAT-o'quv markazi")


@dp.message(IsCheckSubChannels())
async def kanalga_obuna(message:Message):
    text = ""
    inline_channel = InlineKeyboardBuilder()
    for index,channel in enumerate(CHANNELS):
        ChatInviteLink = await bot.create_chat_invite_link(channel)
        inline_channel.add(InlineKeyboardButton(text=f"{index+1}-kanal",url=ChatInviteLink.invite_link))
    inline_channel.adjust(1,repeat=True)
    button = inline_channel.as_markup()
    await message.answer(f"{text} kanallarga azo bo'ling",reply_markup=button)





#Admin panel uchun
@dp.message(Command("admin"),IsBotAdminFilter(ADMINS))
async def is_admin(message:Message):
    await message.answer(text="Admin menu",reply_markup=admin_keyboard.admin_button)


@dp.message(F.text=="Foydalanuvchilar soni",IsBotAdminFilter(ADMINS))
async def users_count(message:Message):
    counts = db.count_users()
    text = f"Botimizda {counts[0]} ta foydalanuvchi bor"
    await message.answer(text=text)

@dp.message(F.text=="Reklama yuborish",IsBotAdminFilter(ADMINS))
async def advert_dp(message:Message,state:FSMContext):
    await state.set_state(Adverts.adverts)
    await message.answer(text="Reklama yuborishingiz mumkin !")

@dp.message(Adverts.adverts)
async def send_advert(message:Message,state:FSMContext):
    
    message_id = message.message_id
    from_chat_id = message.from_user.id
    users = db.all_users_id()
    count = 0
    for user in users:
        try:
            await bot.copy_message(chat_id=user[0],from_chat_id=from_chat_id,message_id=message_id)
            count += 1
        except:
            pass
        time.sleep(0.5) #1002062560840
    await bot.copy_message(chat_id=-1002062560840,from_chat_id=from_chat_id,message_id=message_id)
    
    await message.answer(f"Reklama {count}ta foydalanuvchiga yuborildi")
    await state.clear()


@dp.startup()
async def on_startup_notify(bot: Bot):
    for admin in ADMINS:
        try:
            await bot.send_message(chat_id=int(admin),text="Bot ishga tushdi")
        except Exception as err:
            logging.exception(err)

#bot ishga tushganini xabarini yuborish
@dp.shutdown()
async def off_startup_notify(bot: Bot):
    for admin in ADMINS:
        try:
            await bot.send_message(chat_id=int(admin),text="Bot ishdan to'xtadi!")
        except Exception as err:
            logging.exception(err)



@dp.message(F.text=="/menu")
async def my_menu(message:Message):
    photo = "https://i.pinimg.com/736x/e5/94/02/e594028fbe30b388e76a49d4d19523a5.jpg"
    # await message.answer(text="Asosiy menu",reply_markup=inline_menu)
    await message.answer_photo(photo=photo,caption="Sifat o'quv markazi",reply_markup=inline_menu)

# @dp.message(F.location)
# async def my_location(message:Message):
#     latitude = message.location.latitude
#     longitude = message.location.longitude
#     text = f"latitude={latitude},longitude={longitude}"
#     await message.answer(text)

@dp.callback_query(F.data=="address")
async def my_address(callback:CallbackQuery):
    await callback.answer("Sifat Manzil")
    latitude=40.102467
    longitude=65.373444
    await callback.message.answer("Sifat o'quv markazi manzili")
    await callback.message.answer_location(latitude=latitude,longitude=longitude)

@dp.callback_query(F.data=="course")
async def me_course(callback:CallbackQuery):
    
    await callback.message.answer(text = "Sifat o'quv kurslari, Kurslardan birini tanlang",reply_markup=course_button)
     
 

@dp.callback_query(F.data=="about")
async def me_about(callback:CallbackQuery):
    
    await callback.message.answer(text = "Men To'xtapulatov Sardor 2009-yil 12-noyabr tug'ilganman.Hozir men 3-maktabning 8-sinfida uqiyman.Man Sifat o'quv markaziga 8-oy dan beri darsga boraman.O'qtuvchim: Baratov Muslimbek")
    
@dp.callback_query(F.data=="admin")
async def me_admin(callback:CallbackQuery):
    
    await callback.message.answer(text = "admin tel:+998972838999\nadmin username: @Tuxtapulatov_Sardor")


@dp.message(F.text=="Frontend")
async def Frontend_menu(message:Message,state:FSMContext):
    #maktabingiz haqida ma'lumot
    text = """Front-End dasturlovchi veb-saytning foydalanuvchiga ko'rinadigan narsalarni tayyorlash bilan shug'ullanadi. Masalan siz veb-saytlarda ko'radigan oddiygina tugma uchun ham Front-End dasturlovchi mehnat qilib kod yozadi. Ya'ni siz brauzer orqali ekranda ko'rib turadigan narsalarni tayyorlash Front-End dasturchining barcha-uchun va mana shu elementlarning jamlanmasi vebsaytning Front-End qismi deyiladi. Yanada sodda brauzer tushuntiradigan bo'lsam siz veb-sayt nominiga yozib, veb-saytga kirganingizda sizga ko'rinib turgan qismi Front-End qismiga ega"""
    #maktab rasmini olish 
    photo = types.FSInputFile("frontend.jpg",filename="frontend.jpg")

    #maktab haqidagi ma'lumotni yuborish
    await message.answer_photo(photo=photo,caption=text)



@dp.message(F.text=="Backend")
async def Backend_menu(message:Message,state:FSMContext):
    #maktabingiz haqida ma'lumot
    text = """ Backend (inglizcha back-end) - bu xizmatning dasturiy ta'minot va apparat qismidir. Bu veb-sayt mantig'i amalga oshiriladigan vositalar to'plami. Bu bizning ko'zimizdan yashiringan narsa, ya'ni kompyuter va brauzerdan tashqarida sodir bo'ladi. (Back End) Orqa tomon ishlab chiquvchilari veb-saytlarning foydalanuvchilar bilan bevosita aloqasi bo'lmagan "qopqoq ostida" qismlarini yaratadilar.
    Backend (back end, back-end) esa Frontendning aksi hisoblanib, qaysidir narsaning ichki, yoki orqa tomoni degan ma’noni anglatadi. Bu bilan biz qaysidir narsaning hammaga ko’rinmaydigan, yashirin, ichki yoki orqa tomonini nazarda tutgan bo’lamiz."""
    #maktab rasmini olish 
    photo = types.FSInputFile("backend.jpg",filename="backend.jpg")

    #maktab haqidagi ma'lumotni yuborish
    await message.answer_photo(photo=photo,caption=text)


@dp.message(CommandStart())
async def command_start_handler(message: Message) -> None:
    full_name = message.from_user.full_name
    text = f"Assalomu alaykum,{full_name}\n Bu bot ismingizni ma'nosini topib beradi.Ismingizni kiriting !!!"
    await message.reply(text=text)


@dp.message(F.text)
async def name(message:Message):
    ism = message.text 
    natija = ismlar_manosi(ism=ism)

    await message.answer(text=natija)



async def main() -> None:
    global bot,db
    bot = Bot(TOKEN, parse_mode=ParseMode.HTML)
    db = Database(path_to_db="main.db")
    db.create_table_users()
    await set_default_commands(bot)
    dp.message.middleware(ThrottlingMiddleware(slow_mode_delay=0.5))
    await dp.start_polling(bot)
    




if __name__ == "__main__":
    logging.basicConfig(level=logging.INFO, stream=sys.stdout)

    asyncio.run(main())
























































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































````